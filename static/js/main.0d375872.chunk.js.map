{"version":3,"sources":["assets/img/logo.svg","Components/Footer/style.js","Components/Footer/index.js","Components/Pages/Nowplaygrid/style.js","Components/Pagination/index.js","Components/Pages/Nowplaygrid/index.js","Components/Notfound.js","Components/Pages/SearchResult/index.js","Components/Homepage/Nowplaying/index.js","Components/Pages/ForgetPws/style.js","Components/Pages/ForgetPws/index.js","Components/Pages/SignUp/index.js","Components/Pages/UserPortfolio/index.js","Components/Pages/Genre/style.js","services/genreService.js","Components/Pages/Genre/index.js","Components/Pages/MoviesByGenres/index.js","App.js","serviceWorker.js","index.js","Components/Wrapper.js","Components/Commons/MoviesLists/index.js","Components/Navbars/style.js","Components/Search/index.js","Debounce.js","Components/Commons/SearchGrid/index.js","Components/Navbars/index.js","Components/Header/index.js","Components/Homepage/style.js","Components/Commons/MoviesItem/index.js","Components/Homepage/Nowplaying/style.js","config.js"],"names":["module","exports","Copyright","style","div","Footer","props","to","DefaultPegination","Pagination","l","totalPages","pageItem","currentPage","left","right","ranges","rangeWithDot","i","push","className","map","key","onClick","Nowplaygrid","Props","useState","movieLists","setMovieLists","setCurrentPage","setTotalPages","useEffect","Axios","get","tmdb_api_url","tmdb_api_key","then","res","console","log","data","total_pages","results","catch","err","error","Container","Row","movieList","Col","id","md","Card","Img","variant","src","poster_path","Body","title","Button","alert","length","Notfound","qs","require","SearchResult","queryObj","parse","location","search","ignoreQueryPrefix","q","axios","history","Wrapper","MoviesLists","moviesItems","Nowplaying","FormWrap","ForgetPws","Form","Group","Control","type","placeholder","value","SignUp","userName","setUserName","email","setEmail","password","setPassword","setSuccessful","setMessage","onSubmit","e","preventDefault","post","toString","onChange","target","UserPortfolio","GenerWrapper","getGenre","a","result","genres","Error","message","getMovieByGenre","genreId","Genre","setGenres","movies","setMovies","catName","setCatName","genreService","loadGenre","handleCat","currentId","catNames","genre","name","MoviesByGenres","catId","genresList","setGenresList","Homepage","React","lazy","SinglePage","App","basename","Suspense","fallback","color","size","duration","path","exact","component","ContainerClassName","TransitionClassName","EasingType","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","children","movie","Navwrapper","SearchGrids","Search","submitHandle","inputHandle","inline","FormControl","Debounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","SearchGrid","alt","Navbars","searchkey","setSearchKey","setIsSearching","reqToken","setReqToken","debouncedSearchTerm","searchMovies","request_token","handleLogin","Navbar","expand","Toggle","aria-controls","Collapse","evt","pathname","Nav","NavDropdown","Item","href","Divider","Header","SectionWrapper","RegistorWrapper","MoviesItem","date","split","getYear","release_date","BannerWrapper"],"mappings":"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","file":"static/js/main.0d375872.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ed0f1a6a.svg\";","import style from \"styled-components\";\r\n\r\nexport const Copyright = style.div`\r\n    background:#000;\r\n    color:#fff;\r\n    text-align:center;\r\n    padding:20px;\r\n    a{\r\n        text-decoration:none;\r\n        margin-left:5px;\r\n        color:#FBB124;\r\n    }\r\n    a:hover{\r\n        opacity:0.9;\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport { Copyright } from \"./style\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * @author\r\n * @function Footer\r\n **/\r\n\r\nconst Footer = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <Copyright>\r\n        Made by\r\n        <Link to=\"https://github.com/saraswatiti\">Saraswati Timsina</Link>\r\n      </Copyright>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import style from \"styled-components\";\r\n\r\nexport const DefaultPegination = style.div`\r\n    button{\r\n        background:#000;\r\n        color:#fff;\r\n        display:inline-block;\r\n        padding:5px 15px;\r\n        color:#fff;\r\n        font-family: \"Lora\", serif; \r\n        font-size: 1rem;\r\n        border:0;\r\n        margin-right:5px;\r\n    }\r\n    button:hover{\r\n        background:#FBB124;\r\n        transition:all 0.67s ease-in-out;\r\n    }\r\n`;\r\n","import React, { Fragment } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * @author\r\n * @function Pagination\r\n **/\r\n\r\nconst Pagination = ({ totalPages, pageItem, currentPage }) => {\r\n  let delta = 2;\r\n  let left = currentPage - delta;\r\n  let right = currentPage + delta + 1;\r\n  let ranges = [];\r\n  let rangeWithDot = [];\r\n  let l;\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    if (i == 1 || i == totalPages || (i >= left && i < right)) {\r\n      ranges.push(i);\r\n    }\r\n  }\r\n\r\n  for (let i of ranges) {\r\n    if (l) {\r\n      if (i - l === 2) {\r\n        rangeWithDot.push(l + 1);\r\n      } else if (i - l !== 1) {\r\n        rangeWithDot.push(\"...\");\r\n      }\r\n    }\r\n    rangeWithDot.push(i);\r\n    l = i;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"pagination\">\r\n      {rangeWithDot.map((i) => (\r\n        <li key={i} className=\"page-item\">\r\n          <button onClick={() => pageItem(i)} className=\"page-link\">\r\n            {i}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Card, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BannerWrapper } from \"../../Homepage/Nowplaying/style\";\r\nimport Axios from \"axios\";\r\nimport { DefaultPegination } from \"./style\";\r\nimport { tmdb_api_url, tmdb_api_key } from \"../../../../src/config\";\r\nimport Pagination from \"../../Pagination\";\r\n/**\r\n * @author\r\n * @function Nowplaygrid\r\n **/\r\n\r\nconst Nowplaygrid = ({ Props }) => {\r\n  const [movieLists, setMovieLists] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\r\n      `${tmdb_api_url}/movie/now_playing?api_key=${tmdb_api_key}&language=en-US&page=${currentPage}`\r\n    )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setTotalPages(res.data.total_pages);\r\n        setMovieLists(res.data.results);\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }, [currentPage]);\r\n\r\n  const nextHandler = () => {\r\n    if (currentPage < totalPages) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const preHandler = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    } else {\r\n      alert(\"this is first page Please click the Next button\");\r\n    }\r\n  };\r\n\r\n  const pageItem = (rangeWithDot) => {\r\n    setCurrentPage(rangeWithDot);\r\n  };\r\n\r\n  return (\r\n    <BannerWrapper>\r\n      <Container className=\"mt-5\">\r\n        <div className=\"clearfix mt-5 mb-2\">\r\n          <h3 className=\"float-left\">Now playing</h3>\r\n        </div>\r\n        <Row>\r\n          {movieLists.map((movieList) => {\r\n            return (\r\n              <Col key={movieList.id} md=\"3\" className=\"mb-3\">\r\n                <Link to={`/movies/${movieList.id}`}>\r\n                  <Card>\r\n                    <Card.Img\r\n                      variant=\"top\"\r\n                      src={`https://image.tmdb.org/t/p/w500/${movieList.poster_path}`}\r\n                    />\r\n                    <Card.Body>\r\n                      <h3>{movieList.title}</h3>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Link>\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n        <DefaultPegination className=\"clearfix mt-5 mb-2\">\r\n          <Button onClick={preHandler}>Prev</Button>\r\n          <Button onClick={nextHandler}>Next</Button>\r\n        </DefaultPegination>\r\n        {movieLists.length > 0 && (\r\n          <Pagination\r\n            totalPages={totalPages}\r\n            currentPage={currentPage}\r\n            pageItem={pageItem}\r\n          />\r\n        )}\r\n      </Container>\r\n    </BannerWrapper>\r\n  );\r\n};\r\n\r\nexport default Nowplaygrid;\r\n","import React from \"react\";\r\n\r\n/**\r\n * @author\r\n * @function Notfound\r\n **/\r\n\r\nconst Notfound = (props) => {\r\n  return <div>Result Notfound!</div>;\r\n};\r\n\r\nexport default Notfound;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport MoviesLists from \"../../Commons/MoviesLists\";\r\nimport Wrapper from \"../../Wrapper\";\r\nimport axios from \"axios\";\r\nimport { tmdb_api_url, tmdb_api_key } from \"./../../../config\";\r\nimport Notfound from \"../../Notfound\";\r\nconst qs = require(\"qs\");\r\n\r\n/**\r\n * @author\r\n * @function SearchResult\r\n **/\r\n\r\nconst SearchResult = (props) => {\r\n  const [movieLists, setMovieLists] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let queryObj = qs.parse(props.location.search, { ignoreQueryPrefix: true });\r\n    if (!queryObj.q) {\r\n      props.history.push(\"/\");\r\n      return;\r\n    }\r\n    axios.get(`${tmdb_api_url}/search/movie?api_key=${tmdb_api_key}&query=${queryObj.q}`)\r\n      .then((res) => setMovieLists(res.data.results))\r\n      .catch((err) => console.error(err));\r\n  }, [props.location.search]);\r\n\r\n  return (\r\n    <Wrapper {...props}>\r\n      <div className=\"mb-5 mt-5\">\r\n        {movieLists.length > 0 ? (\r\n          <MoviesLists moviesItems={movieLists} />\r\n        ) : (\r\n            <Notfound />\r\n          )}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SearchResult;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport MoviesLists from \"../../Commons/MoviesLists\";\r\nimport { tmdb_api_key, tmdb_api_url } from \"./../../../config\";\r\nimport Wrapper from \"../../Wrapper\";\r\nimport Notfound from \"../../Notfound\";\r\n\r\n/**\r\n * @author\r\n * @function Nowplaying\r\n **/\r\n\r\nconst Nowplaying = (props) => {\r\n  const [movieLists, setMovieLists] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${tmdb_api_url}/movie/now_playing?api_key=${tmdb_api_key}&language=en-US&page=${currentPage}`\r\n      )\r\n      .then((res) => {\r\n        setTotalPages(res.data.total_pages);\r\n        setMovieLists(res.data.results);\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }, [currentPage]);\r\n\r\n  const nextHandler = () => {\r\n    if (currentPage < totalPages) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const preHandler = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    } else {\r\n      alert(\"this is first page Please click the Next button\");\r\n    }\r\n  };\r\n\r\n  const pageItem = (rangeWithDot) => {\r\n    setCurrentPage(rangeWithDot);\r\n  };\r\n\r\n  return (\r\n    <Wrapper {...props}>\r\n      <div className=\"mb-5 mt-5\">\r\n        {movieLists.length > 0 ? (\r\n          <MoviesLists moviesItems={movieLists} />\r\n        ) : (\r\n            <Notfound />\r\n          )}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Nowplaying;\r\n","import style from \"styled-components\";\r\nexport const FormWrap = style.div`\r\n    width:75%;\r\n    margin:50px auto;\r\n    padding:30px;\r\n    font-family: \"Lora\", serif;\r\n    box-shadow:0 0 10px rgba(0,0,0,0.2);\r\n    h1{\r\n        margin:0 auto 15px;\r\n        text-align:center;\r\n    }\r\n    input{\r\n        display:block;\r\n        width:100%;\r\n        margin-bottom:15px;\r\n        height:41px;\r\n        padding:15px;\r\n    }\r\n    input[type='submit']{\r\n        width:auto;\r\n        height: auto;\r\n        padding: 5px 15px;\r\n        border-radius: 50px;\r\n        display: inline-block;\r\n        margin-right: 15px;\r\n    }\r\n    input:focus{\r\n        outline:0;\r\n        box-shadow:none;\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport Wrapper from \"../../Wrapper\";\r\nimport { Form, InputGroup, Container } from \"react-bootstrap\";\r\nimport { FormWrap } from \"./style\";\r\n\r\n/**\r\n * @author\r\n * @function ForgetPws\r\n **/\r\n\r\nconst ForgetPws = (props) => {\r\n\r\n  return (\r\n    <Wrapper {...props}>\r\n      <Container>\r\n        <FormWrap>\r\n          <h1>Password Change</h1>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Control type=\"password\" placeholder=\"New Password\" />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control type=\"password\" placeholder=\"Confirm Password\" />\r\n            </Form.Group>\r\n            <input type=\"submit\" value=\"Change Password\" />\r\n          </Form>\r\n        </FormWrap>\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ForgetPws;\r\n","import React, { useState } from \"react\";\r\nimport Wrapper from \"./../../Wrapper\";\r\nimport { Container, Form } from \"react-bootstrap\";\r\nimport { FormWrap } from \"./../ForgetPws/style\";\r\nimport axios from \"axios\";\r\nimport { tmdb_api_key, tmdb_api_url } from \"./../../../config\";\r\n/**\r\n * @author\r\n * @function SignUp\r\n **/\r\n\r\nconst SignUp = (props) => {\r\n  const [userName, setUserName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [successful, setSuccessful] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onChangeUserName = (e) => {\r\n    setUserName(e.target.value);\r\n  };\r\n\r\n  const onChangeEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleRegistor = (e) => {\r\n    e.preventDefault();\r\n    setMessage(\"\");\r\n    setSuccessful(false);\r\n    axios.post(`${tmdb_api_url}/authentication/token/new?api_key=${tmdb_api_key}`, { userName, password, email })\r\n      .then((res) => {\r\n        setSuccessful(true);\r\n      })\r\n      .catch((err) => {\r\n        err.res && err.res.data && err.toString();\r\n        setMessage();\r\n        setSuccessful(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Wrapper {...props}>\r\n      <Container>\r\n        <FormWrap>\r\n          <Form onSubmit={handleRegistor}>\r\n            <h1>Sign Up Form</h1>\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"UserName\"\r\n                onChange={onChangeUserName}\r\n              />\r\n            </Form.Group>\r\n            {/* <Form.Group>\r\n              <Form.Control type=\"text\" placeholder=\"Last Name\" />\r\n            </Form.Group> */}\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                onChange={onChangeEmail}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                onChange={onChangePassword}\r\n              />\r\n            </Form.Group>\r\n            {/* <Form.Group>\r\n              <Form.Control type=\"password\" placeholder=\"Confirm Password\" />\r\n            </Form.Group> */}\r\n            <input type=\"submit\" value=\"Sign Up\" />\r\n          </Form>\r\n        </FormWrap>\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\n\r\n/**\r\n * @author\r\n * @function UserPortfolio\r\n **/\r\n\r\nconst UserPortfolio = (props) => {\r\n  return <div>UserPortfolio</div>;\r\n};\r\n\r\nexport default UserPortfolio;\r\n","import style from \"styled-components\";\r\n\r\nexport const GenerWrapper = style.div`\r\n    ul{\r\n        list-style:none;\r\n    }\r\n    li{\r\n        display:inline-block;\r\n    }\r\n    li button{\r\n        padding:3px 15px;\r\n        background:#FBB124;\r\n        color:#000;\r\n        border:1px solid #FBB124;\r\n        border-radius:25px;\r\n        margin:5px;\r\n        display:inline-block;\r\n        text-decoration:none;\r\n    }\r\n    button:focus{\r\n        outline:0;\r\n    }\r\n`;\r\n","import axios from 'axios';\r\nimport { tmdb_api_url, tmdb_api_key } from '../config';\r\n\r\nexport const getGenre = async () => {\r\n\r\n  try {\r\n    const result = await axios.get(`${tmdb_api_url}/genre/movie/list?api_key=${tmdb_api_key}&language=en-US`);\r\n\r\n    return result.data.genres;\r\n  } catch (error) {\r\n\r\n    throw new Error(error.message);\r\n  }\r\n}\r\n\r\nexport const getMovieByGenre = async genreId => {\r\n\r\n  try {\r\n    const result = await axios.get(`${tmdb_api_url}/discover/movie?api_key=${tmdb_api_key}&with_genres=${genreId}`);\r\n\r\n    return result.data.results;\r\n  } catch (error) {\r\n\r\n    throw new Error(error.message)\r\n  }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport Wrapper from \"../../Wrapper\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { GenerWrapper } from \"./style\";\r\nimport * as genreService from \"../../../services/genreService\";\r\nimport MoviesLists from \"../../Commons/MoviesLists\";\r\n\r\n/**\r\n * @author\r\n * @function Genre\r\n **/\r\n\r\nconst Genre = (props) => {\r\n  const [genres, setGenres] = useState([]);\r\n  const [movies, setMovies] = useState([]);\r\n  const [catName, setCatName] = useState('');\r\n\r\n  useEffect(() => {\r\n    async function loadGenre() {\r\n      try {\r\n        const genres = await genreService.getGenre();\r\n        setGenres(genres);\r\n\r\n        const movies = await genreService.getMovieByGenre(genres[0].id);\r\n        setMovies(movies);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n    loadGenre();\r\n  }, []);\r\n\r\n  const handleCat = async (currentId, catNames) => {\r\n    try {\r\n      setCatName(catNames);\r\n      const movies = await genreService.getMovieByGenre(currentId);\r\n      setMovies(movies);\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper {...props}>\r\n      <Container>\r\n        <h2>Movies Genres</h2>\r\n        <GenerWrapper>\r\n          <ul>\r\n            {genres.map((genre) => {\r\n              return (\r\n                <li key={genre.id}>\r\n                  <button onClick={() => handleCat(genre.id, genre.name)}>\r\n                    {genre.name}\r\n                  </button>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </GenerWrapper>\r\n        <h2>{catName}</h2>\r\n        <MoviesLists moviesItems={movies} />\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Genre;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { tmdb_api_url, tmdb_api_key } from \"../../../config\";\r\nimport MoviesLists from \"../../Commons/MoviesLists\";\r\n\r\n/**\r\n * @author\r\n * @function MoviesByGenres\r\n **/\r\n\r\nconst MoviesByGenres = ({ catId }) => {\r\n  const [genresList, setGenresList] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `\r\n ${tmdb_api_url}/discover/movie?api_key=${tmdb_api_key}&with_genres=80`\r\n      )\r\n      .then((res) => setGenresList(res.data.results))\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n  // const SearchByCat = () => {\r\n  //   try {\r\n  //     const res = axios.get(\r\n  //       `\r\n  // ${tmdb_api_url}/discover/movie?api_key=${tmdb_api_key}&with_genres=80`\r\n  //     );\r\n  //     console.log(res.data);\r\n  //     return res.data;\r\n  //   } catch (err) {\r\n  //     console.log(err);\r\n  //   }\r\n\r\n  return <MoviesLists moviesItems={genresList} />;\r\n};\r\n\r\nexport default MoviesByGenres;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport Header from \"./Components/Header\";\r\nimport { CubeGrid } from \"styled-loaders-react\";\r\nimport Footer from \"./Components/Footer\";\r\nimport { TinyButton as ScrollUpButton } from \"react-scroll-up-button\";\r\nimport Nowplaygrid from \"./Components/Pages/Nowplaygrid\";\r\nimport SearchResult from \"./Components/Pages/SearchResult\";\r\nimport Nowplaying from \"./Components/Homepage/Nowplaying\";\r\nimport ForgetPws from \"./Components/Pages/ForgetPws\";\r\nimport SignUp from \"./Components/Pages/SignUp\";\r\nimport UserPortfolio from \"./Components/Pages/UserPortfolio\";\r\nimport Genre from \"./Components/Pages/Genre\";\r\nimport MoviesByGenres from \"./Components/Pages/MoviesByGenres\";\r\nconst Homepage = React.lazy(() => import(\"./Components/Homepage\"));\r\nconst SinglePage = React.lazy(() => import(\"./Components/SinglePage\"));\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className=\"App\">\r\n      <HashRouter basename=\"/\">\r\n        <React.Suspense\r\n          fallback={<CubeGrid color=\"red\" size=\"60px\" duration=\"1.5s\" />}\r\n        >\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Homepage} />\r\n            <Route path=\"/movies/:id\" component={SinglePage} />\r\n            <Route path=\"/nowplaying\" component={Nowplaying} />\r\n            <Route path=\"/pages/nowplay_grid\" component={Nowplaygrid} />\r\n            <Route path=\"/search\" component={SearchResult} />\r\n            <Route path=\"/password-change\" component={ForgetPws} />\r\n            <Route path=\"/signup\" component={SignUp} />\r\n            <Route path=\"/User-login-page\" component={UserPortfolio} />\r\n            <Route path=\"/genre\" component={Genre} />\r\n            <Route path=\"genres/:id\" component={MoviesByGenres} />\r\n          </Switch>\r\n        </React.Suspense>\r\n        <Footer />\r\n        <ScrollUpButton\r\n          ContainerClassName=\"AnyClassForContainer\"\r\n          TransitionClassName=\"AnyClassForTransition\"\r\n          EasingType=\"easeInCubic\"\r\n        />\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\n\r\n/**\r\n * @author\r\n * @function Wrapper\r\n **/\r\n\r\nconst Wrapper = (props) => {\r\n  return (\r\n    <>\r\n      <Header {...props} />\r\n      {props.children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n","import React, { Fragment } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport MoviesItem from \"../MoviesItem\";\r\n\r\n/**\r\n * @author\r\n * @function MoviesLists\r\n **/\r\n\r\nconst MoviesLists = ({ moviesItems }) => {\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container>\r\n        <Row>\r\n          {moviesItems.map((movie) => (\r\n            <Col className=\"col-3\" key={movie.id}>\r\n              <MoviesItem movie={movie} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MoviesLists;\r\n","import style from \"styled-components\";\r\n\r\nexport const Navwrapper = style.div`\r\nbackground-color:#FBB124;\r\nfont-family: \"Lora\", serif;\r\n.search-section{\r\n    background-color:#fff;\r\n    border-radius:100px;\r\n    margin-left:40px;\r\n    height:40px;\r\n    padding: 0 20px;\r\n    input{\r\n        border:0;\r\n    }\r\n    input:focus{\r\n        box-shadow:none;\r\n    }\r\n}\r\n.navbar-light .navbar-nav .nav-link{\r\n    color:#000;\r\n}\r\n\r\n`;\r\n\r\nexport const SearchGrids = style.div`\r\n\r\nposition: absolute;\r\ntop: 50px;\r\nleft:0;\r\nz-index:9;\r\nul{\r\npadding: 0;\r\nbackground: #fff;\r\nlist-style: none;\r\nbox-shadow: 0 0 1px rgba(0,0,0,0.2); \r\noverflow-y: scroll;\r\nheight: 300px; \r\n}\r\nfigure{\r\n    margin-right:15px;\r\n}\r\nimg{\r\n    width:150px;\r\n}\r\nli{\r\n    display:flex;\r\n    font-size:20px;\r\n    align-items:center;\r\n}\r\n`;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { Form, FormControl } from \"react-bootstrap\";\r\n\r\n/**\r\n * @author\r\n * @function Search\r\n **/\r\n\r\nconst Search = ({ submitHandle, inputHandle }) => {\r\n\r\n  return (\r\n    <Fragment>\r\n      <Form inline onSubmit={submitHandle} className=\"search-section\">\r\n        <FaSearch />\r\n        <FormControl\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          className=\" mr-sm-2\"\r\n          onChange={inputHandle}\r\n        />\r\n        {/* <Button type=\"submit\">Submit</Button> */}\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n/**\r\n * @author\r\n * @function Debounce\r\n **/\r\n\r\nconst Debounce = (value, delay) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default Debounce;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SearchGrids } from \"../../Navbars/style\";\r\n\r\n/**\r\n * @author\r\n * @function SearchGrid\r\n **/\r\n\r\nconst SearchGrid = ({ movies }) => {\r\n  return (\r\n    <SearchGrids>\r\n      <ul>\r\n        {movies.map((movie) => {\r\n          return (\r\n            <Link to={`/movies/${movie.id}`}>\r\n              <li key={movie.id}>\r\n                <figure>\r\n                  <img\r\n                    src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\r\n                    alt={movie.title}\r\n                  />\r\n                </figure>\r\n                {movie.title}\r\n              </li>\r\n            </Link>\r\n          );\r\n        })}\r\n      </ul>\r\n    </SearchGrids>\r\n  );\r\n};\r\n\r\nexport default SearchGrid;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Navbar, Nav, NavDropdown, Container } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Navwrapper } from \"./style\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { tmdb_api_url, tmdb_api_key } from \"../../config\";\r\nimport Search from \"../Search\";\r\nimport axios from \"axios\";\r\nimport { FaLock } from \"react-icons/fa\";\r\nimport { RegistorWrapper } from \"../Homepage/style\";\r\nimport Debounce from \"../../Debounce\";\r\nimport MoviesLists from \"../Commons/MoviesLists\";\r\nimport SearchGrid from \"../Commons/SearchGrid\";\r\nconst qs = require(\"qs\");\r\n\r\n/**\r\n * @author\r\n * @function Navbars\r\n **/\r\n\r\nconst Navbars = (props) => {\r\n  const [movieLists, setMovieLists] = useState([]);\r\n  const [searchkey, setSearchKey] = useState(\"\");\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [reqToken, setReqToken] = useState(true);\r\n\r\n  const debouncedSearchTerm = Debounce(searchkey, 500);\r\n\r\n  useEffect(() => {\r\n    if (debouncedSearchTerm) {\r\n      setIsSearching(true);\r\n      searchMovies(debouncedSearchTerm).then((results) => {\r\n        setIsSearching(false);\r\n        setMovieLists(results);\r\n      });\r\n    } else {\r\n      setMovieLists([]);\r\n    }\r\n  }, [debouncedSearchTerm]);\r\n\r\n  const searchMovies = async (search) => {\r\n    try {\r\n      const result = await axios.get(\r\n        `${tmdb_api_url}/search/movie?api_key=${tmdb_api_key}&query=${search}`\r\n      );\r\n      return result.data.results;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const submitHandle = (evt) => {\r\n    evt.preventDefault();\r\n    props.history.push({\r\n      pathname: \"/search\",\r\n      search: `?q=${searchkey}`,\r\n    });\r\n  };\r\n\r\n  const inputHandle = (evt) => {\r\n    setSearchKey(evt.target.value);\r\n  };\r\n\r\n  //for login\r\n  useEffect(() => {\r\n    let queryObj = qs.parse({ ignoreQueryPrefix: true });\r\n\r\n    const ObjToken = axios.post(`https://api.themoviedb.org/3/authentication/session/new?api_key=8dcc478bc8ac0518dd5d7b133c69b56b`,\r\n      { request_token: queryObj.request_token }\r\n    );\r\n    setReqToken(false);\r\n  }, [reqToken]);\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    const res = await axios.get(\r\n      `${tmdb_api_url}/authentication/token/new?api_key=${tmdb_api_key}`\r\n    );\r\n    const { request_token } = res.data;\r\n    window.location = `https://www.themoviedb.org/authenticate/${request_token}?redirect_to=https://saraswatiti.github.io/movie_project/#/`;\r\n  };\r\n\r\n  return (\r\n    <Navwrapper>\r\n      <Container>\r\n        <Navbar expand=\"lg\">\r\n          <Link to=\"/\">\r\n            <img src={require(\"./../../assets/img/logo.svg\")} alt=\"logo\" />\r\n          </Link>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Search\r\n              submitHandle={submitHandle}\r\n              inputHandle={inputHandle}\r\n              value={searchkey}\r\n            />\r\n\r\n            {movieLists.length > 0 && <SearchGrid movies={movieLists} />}\r\n\r\n            <Nav className=\"ml-auto\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                Home\r\n              </Link>\r\n              <Link to=\"/Genre\" className=\"nav-link\">\r\n                movies\r\n              </Link>\r\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\">\r\n                  Another action\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\">\r\n                  Something\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"#action/3.4\">\r\n                  Separated link\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n              <a href=\"#\" onClick={handleLogin}>\r\n                <RegistorWrapper>\r\n                  <FaLock />\r\n                </RegistorWrapper>\r\n              </a>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </Container>\r\n    </Navwrapper>\r\n  );\r\n};\r\n\r\nexport default Navbars;\r\n","import React from \"react\";\r\nimport Navbars from \"../Navbars\";\r\n\r\n/**\r\n * @author\r\n * @function Header\r\n **/\r\n\r\nconst Header = (props) => {\r\n\r\n  return (\r\n    <div className=\"main-header\">\r\n      <Navbars {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import style from \"styled-components\";\r\n\r\nexport const SectionWrapper = style.div`\r\ntext-align:center;\r\nmargin:0 -15px;\r\n.card{\r\n    margin-bottom:30px;\r\n    text-align:left;\r\n}\r\nbutton{\r\n    text-align:center;\r\n    margin:20px 0 50px;\r\n    font-family: \"Lora\", serif; \r\n    font-weight:600;\r\n} \r\n`;\r\nexport const RegistorWrapper = style.div`\r\n    background:#000;\r\n    display: inline-block;\r\n    width: 25px;\r\n    height: 25px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    border-radius: 50%;\r\n    margin-top: 8px;\r\nsvg{\r\n    font-size:13px;\r\n    color:#fff;\r\n}\r\n`;\r\n","import React, { Fragment } from \"react\";\r\nimport { Card, Figure } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\n\r\n/**\r\n * @author\r\n * @function MoviesItem\r\n **/\r\n\r\nconst MoviesItem = ({ movie }) => {\r\n\r\n  const getYear = (date) => {\r\n    if (!date) {\r\n      return;\r\n    }\r\n\r\n    return date.split(\"-\")[0];\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <Link to={`/movies/${movie.id}`}>\r\n          <Figure>\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\r\n            />\r\n          </Figure>\r\n          <Card.Body>\r\n            <h3>{movie.title}</h3>\r\n            <div className=\"movie-content\">\r\n              <span>{getYear(movie.release_date)}</span>\r\n              <span className=\"float-right\">\r\n                <FaHeart />\r\n              </span>\r\n            </div>\r\n          </Card.Body>\r\n        </Link>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MoviesItem;\r\n","import style from \"styled-components\";\r\n\r\nexport const BannerWrapper = style.div`\r\nh1,h2,h3{\r\n    color:#000;\r\n   font-family: \"Lora\", serif; \r\n}\r\nh2{\r\n    font-size: 1.7rem;  \r\n    font-weight:500;\r\n}\r\nh3{\r\n    font-size:1.3rem;\r\n}\r\nh3:hover{\r\n    color:#FBB124;\r\n}\r\na:hover{\r\n    text-decoration:none;\r\n    transition:all 0.67s ease-in-out;\r\n}\r\n.slick-arrow{\r\n    background-color:#FBB124;\r\n    width:30px;\r\n    height:30px;\r\n    border-radius:100%;\r\n    transition:all 0.67s ease-in-out;\r\n}\r\n.slick-arrow:hover,\r\n.slick-arrow:active,\r\n.slick-arrow:focus{\r\n    background-color:#FBB124;\r\n    transition:all 0.67s ease-in-out;\r\n}\r\n.figure{\r\n    overflow:hidden;\r\n    margin:0;\r\n}\r\nimg:hover{\r\n    transform: scale(1.1);\r\n    transition:all 0.67s ease-in-out;\r\n}\r\n`;\r\n","const tmdb_api_url = \"https://api.themoviedb.org/3\";\r\nconst tmdb_api_key = \"8dcc478bc8ac0518dd5d7b133c69b56b\";\r\n\r\nexport { tmdb_api_url, tmdb_api_key };\r\n"],"sourceRoot":""}